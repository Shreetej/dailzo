-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.addresses
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_line_1 character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_line_2 character varying(255) COLLATE pg_catalog."default",
    address_line_3 character varying(255) COLLATE pg_catalog."default",
    zip_pin character varying(20) COLLATE pg_catalog."default" NOT NULL,
    benchmark character varying(255) COLLATE pg_catalog."default",
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    city character varying(255) COLLATE pg_catalog."default",
    state character varying(255) COLLATE pg_catalog."default",
    type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    longitude double precision,
    latitude double precision,
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    last_updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(255) COLLATE pg_catalog."default",
    last_modified_by character varying(255) COLLATE pg_catalog."default",
    mobileno character varying(20) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "Address_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.food_products
(
    id character(36) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    category character varying(100) COLLATE pg_catalog."default",
    type food_type NOT NULL,
    price numeric(10, 2) NOT NULL,
    image_url character varying(255) COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_on timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_updated_on timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by character(36) COLLATE pg_catalog."default",
    last_modified_by character(36) COLLATE pg_catalog."default",
    CONSTRAINT food_product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_variants
(
    id character(36) COLLATE pg_catalog."default" NOT NULL,
    product_id character(36) COLLATE pg_catalog."default" NOT NULL,
    variant_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    additional_description text COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    quantity_available integer DEFAULT 0,
    is_active boolean DEFAULT true,
    created_on timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_updated_on timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by character(36) COLLATE pg_catalog."default",
    last_modified_by character(36) COLLATE pg_catalog."default",
    CONSTRAINT product_variant_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    last_updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(255) COLLATE pg_catalog."default",
    last_modified_by character varying(255) COLLATE pg_catalog."default",
    mobileno character varying(20) COLLATE pg_catalog."default",
    middle_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "Address_created_by_fkey" FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "Address_last_modified_by_fkey" FOREIGN KEY (last_modified_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "Address_user_id_fkey" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.food_products
    ADD CONSTRAINT food_product_created_by_fkey FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.food_products
    ADD CONSTRAINT food_product_last_modified_by_fkey FOREIGN KEY (last_modified_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variant_created_by_fkey FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variant_last_modified_by_fkey FOREIGN KEY (last_modified_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variant_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.food_products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_created_by_fkey FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_last_modified_by_fkey FOREIGN KEY (last_modified_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;